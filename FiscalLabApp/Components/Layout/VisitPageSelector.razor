@using System.Text.Json
@using FiscalLabApp.Extensions
@using FiscalLabApp.Services
@using Mapster
@inject NavigationManager NavigationManager
@inject IVisitService VisitService
@inject SelectedPageEventNotifier SelectedPageEventNotifier

<div class="content">
    <InputSelect @bind-Value="_selectedPageName" class="form-select mb-3" aria-label="Large select example" @bind-Value:after="CallVisitPage">
        @foreach (var visitPage in Pages)
        {
            <option value="@visitPage.Name" checked="@(visitPage.Name.Equals(NavigationManager.GetCurrentVisitPage()))">
                @($"{visitPage.DisplayName} ({visitPage.TotalItems - visitPage.PendingItems} de {visitPage.TotalItems})")
            </option>
        }
    </InputSelect>
</div>

@code
{
    [CascadingParameter] public EditVisitLayout Layout { get; set; } = new();

    [Parameter] public VisitPage[] Pages { get; set; } = Array.Empty<VisitPage>();

    private VisitViewModel _selectedVisit = new();
    private string _selectedPageName = string.Empty;

    [Parameter] public EventCallback<decimal> ValueUpdated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        SelectedPageEventNotifier.SelectedPageEvent += SelectedPageHandler;
    }

    private void SelectedPageHandler(string currentPage)
    {
        _selectedPageName = currentPage;
        StateHasChanged();
    }
    
    private void CallVisitPage()
    {
        if (Layout.SelectedVisit is null) return;
        NavigationManager.NavigateTo($"visits/{Layout.SelectedVisit.Id}/{_selectedPageName}");
    }
}