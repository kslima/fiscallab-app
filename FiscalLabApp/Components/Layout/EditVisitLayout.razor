@using Blazored.Toast.Configuration
@using FiscalLabApp.Services
@using Mapster
@inherits LayoutComponentBase
@inject IVisitService VisitService
@inject SelectedVisitEventNotifier SelectedVisitEventNotifier

<CascadingValue Value="this">
    <NavMenu/>
    <main class="container" style="background-color: #f5f4f2;">
        <VisitPageSelector Pages="@_pages"/>
        @Body
    </main>
</CascadingValue>

<BlazoredToasts Position="ToastPosition.TopRight" Timeout="5"/>

@code
{
    public VisitViewModel? SelectedVisit { get; set; }
    private VisitPage[] _pages = Array.Empty<VisitPage>();
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        SelectedVisitEventNotifier.SelectedVisit += HandlerVisitPages;
    }
    
    public Task UpdateVisitAsync()
    {
        var visit = SelectedVisit.Adapt<Visit>();
        return VisitService.UpdateAsync(visit);
    }
    
    public async Task<VisitViewModel> SyncVisit(string visitId)
    {
        if (SelectedVisit is not null)
        {
            return SelectedVisit;
        }
        
        var visit = await VisitService.GetByIdAsync(visitId);
        SelectedVisit = visit.Adapt<VisitViewModel>();
        HandlerVisitPages();

        return SelectedVisit;
    }
    
    private void HandlerVisitPages()
    {
        if (SelectedVisit is null) return;
        var metadata = SelectedVisit.GetMetadata();
        _pages = metadata.Pages.OrderBy(v => v.Id).ToArray();
        StateHasChanged();
    }
    
}