@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            @if (_authenticationState?.User.Identity is { IsAuthenticated: false })
            {
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                    <NotAuthorized>
                        <Login/>
                    </NotAuthorized>
                </AuthorizeRouteView>
            }
            else
            {
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
                <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
            }
        </Found>
        <NotFound>
            <CascadingAuthenticationState>
                <PageTitle>Not found </PageTitle>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p role="alert">Sorry, there's nothing at this address.</p>
                </LayoutView>
            </CascadingAuthenticationState>

        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private AuthenticationState? _authenticationState;

    protected override async Task OnInitializedAsync()
    {
        _authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
}
