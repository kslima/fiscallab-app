@page "/cane-scale"
@using FiscalLabApp.Extensions
@layout EditVisitLayout

@inject IMenuService MenuService

<VisitDataSeparator Title="Balanças">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Balança de Entrada" Option="@_options.GetOption(MenuType.CaneScalePageInScale)" Id="inScale" @bind-value="Visit.InScale"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Balança de Saída" Option="@_options.GetOption(MenuType.CaneScalePageOutScale)" Id="outScale" @bind-value="Visit.OutScale"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Sorteio de Cargas" Option="@_options.GetOption(MenuType.CaneScalePageCargoDraw)" Id="cargoDraw" @bind-value="Visit.CargoDraw"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações(Teste de Balança)" Option="@_options.GetOption(MenuType.CaneScalePageScaleObservations)" Id="scaleObservations" @bind-value="Visit.ScaleObservations"/>
        </div>
    </div>
</VisitDataSeparator>


<VisitDataSeparator Title="Calibragens">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="1ª calibração" Option="@_options.GetOption(MenuType.CaneScalePageCalibration1)" Id="calibration1" @bind-value="Visit.Calibration1"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="2ª calibração" Option="@_options.GetOption(MenuType.CaneScalePageCalibration2)" Id="calibration2" @bind-value="Visit.Calibration2"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Órgão Responsável" Option="@_options.GetOption(MenuType.CaneScalePageResponsibleBody)" Id="responsibleBody" @bind-value="Visit.ResponsibleBody"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Certificado de Calibração" Option="@_options.GetOption(MenuType.CaneScalePageCalibrationCertificate)" Id="calibrationCertificate" @bind-value="Visit.CalibrationCertificate"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações 1" Option="@_options.GetOption(MenuType.CaneScalePageObservations1)" Id="observations1" @bind-value="Visit.Observations1"/>
        </div>
    </div>
</VisitDataSeparator>


<VisitDataSeparator Title="Porcentagens Analisadas">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Usina" Option="@_options.GetOption(MenuType.CaneScalePagePlantPercentage)" Id="plant" @bind-value="Visit.PlantPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Fornecedor" Option="@_options.GetOption(MenuType.CaneScalePageProviderPercentage)" Id="provider" @bind-value="Visit.ProviderPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Usina/Fazenda" Option="@_options.GetOption(MenuType.CaneScalePagePlantFarmPercentage)" Id="percentPlantFarm" @bind-value="Visit.PlantFarmPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Fazenda/Fornecedor" Option="@_options.GetOption(MenuType.CaneScalePageFarmProviderPercentage)" Id="percentFarmProvider" @bind-value="Visit.FarmProviderPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações 2" Option="@_options.GetOption(MenuType.CaneScalePageObservations2)" Id="observations2" @bind-value="Visit.Observations2"/>
        </div>
    </div>
</VisitDataSeparator>


@code {

    [CascadingParameter]
    public EditVisitLayout Layout { get; set; } = new();

    private MenuOption[] _options = Array.Empty<MenuOption>();

    public Visit Visit { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _options = await MenuService.GetOptions(PageType.SugarcaneScale);

        if (Layout.SelectedVisit is not null)
        {
            Visit = Layout.SelectedVisit;
        }
    }

}