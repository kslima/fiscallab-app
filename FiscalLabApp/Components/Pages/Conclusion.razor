@page "/conclusion"
@using FiscalLabApp.Extensions

@layout EditVisitLayout
@inject IMenuService MenuService
@inject IVisitService VisitService

<VisitDataSeparator Title="Conclusao">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Atuação do fiscal" Option="@_options.GetOption(MenuType.ConclusionInspectorPerformance)" Id="conclusionInspectorPerformance" @bind-value="Visit.ConclusionInspectorPerformance"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Receptividade Laboratório" Option="@_options.GetOption(MenuType.ConclusionLaboratoryReceptivity)" Id="conclusionLaboratoryReceptivity" @bind-value="Visit.ConclusionLaboratoryReceptivity"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Pendências" Option="@_options.GetOption(MenuType.ConclusionPendencies)" Id="conclusionPendencies" @bind-Value="Visit.ConclusionPendencies"/>
        </div>
    </div>
    
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações sobre a visita" Option="@_options.GetOption(MenuType.ConclusionObservations)" Id="conclusionObservations" @bind-Value="Visit.ConclusionObservations"/>
        </div>
    </div>
</VisitDataSeparator>


@code {

    [CascadingParameter]
    public EditVisitLayout Layout { get; set; } = new();

    [Parameter]
    public string VisitId { get; set; } = string.Empty;

    public Visit Visit { get; set; } = new();

    private MenuOption[] _options = Array.Empty<MenuOption>();

    protected override async Task OnInitializedAsync()
    {
        _options = await MenuService.GetOptions(PageType.Main);

        Layout.SelectedVisit ??= await VisitService.GetByIdAsync(VisitId);
        Visit = Layout.SelectedVisit;
    }

}