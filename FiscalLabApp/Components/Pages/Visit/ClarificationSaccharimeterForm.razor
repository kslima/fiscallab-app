@page "/visits/{visitId}/clarification-saccharimeter"
@implements IDisposable
@implements IAsyncDisposable
@using FiscalLabApp.Extensions
@using FiscalLabApp.Helpers
@using FiscalLabApp.Services
@layout EditVisitLayout

@inject IMenuService MenuService
@inject SelectedPageEventNotifier SelectedPageEventNotifier

<VisitDataSeparator Title="Clarificação">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Frasco" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterBottle)" Id="clarificationSaccharimeterBottle" @bind-value="ClarificationSaccharimeter.Bottle"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Agitação" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterAgitation)" Id="clarificationSaccharimeterAgitation" @bind-value="ClarificationSaccharimeter.Agitation"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Houve Diluição" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterHasDilution)" Id="clarificationSaccharimeterHasDilution" @bind-value="ClarificationSaccharimeter.HasDilution"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Clarificante" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterClarifier)" Id="clarificationSaccharimeterClarifier" @bind-value="ClarificationSaccharimeter.Clarifier"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Pressão" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterPressure)" Id="clarificationSaccharimeterPressure" @bind-value="ClarificationSaccharimeter.Pressure"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Quatidade Clarificante(200ml)" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterClarifierAmount)" Id="clarificationSaccharimeterClarifierAmount" @bind-value="ClarificationSaccharimeter.ClarifierAmount"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Volume Clarificado" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterBottleClarifiedVolume)" Id="clarificationSaccharimeterBottleClarifiedVolume" @bind-value="ClarificationSaccharimeter.BottleClarifiedVolume"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="100ml Após Volume Clarificado" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterBottleAfterClarifiedVolume)" Id="clarificationSaccharimeterBottleAfterClarifiedVolume" @bind-value="ClarificationSaccharimeter.BottleAfterClarifiedVolume"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações 9" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterObservations9)" Id="clarificationSaccharimeterObservations9" @bind-value="ClarificationSaccharimeter.Observations9"/>
        </div>
    </div>
</VisitDataSeparator>


<VisitDataSeparator Title="Sacarímetro">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Estababilização" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterStabilization)" Id="clarificationSaccharimeterStabilization" @bind-value="ClarificationSaccharimeter.Stabilization"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Aferição" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterBenchmarking)" Id="clarificationSaccharimeterBenchmarking" @bind-value="ClarificationSaccharimeter.Benchmarking"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Padrão Quartzo" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterQuartzPattern)" Id="clarificationSaccharimeterQuartzPattern" @bind-value="ClarificationSaccharimeter.QuartzPattern"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Resultado Quartzo" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterQuartzResult)" Id="clarificationSaccharimeterQuartzResult" @bind-value="ClarificationSaccharimeter.QuartzResult"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Leitura do Quartzo" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterQuartzReading)" Id="clarificationSaccharimeterQuartzReading" @bind-value="ClarificationSaccharimeter.QuartzReading"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Certificado Calibração" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterCalibrationCertificate)" Id="clarificationSaccharimeterCalibrationCertificate" @bind-value="ClarificationSaccharimeter.CalibrationCertificate"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Limpeza Tubo" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterTubeCleaning)" Id="clarificationSaccharimeterTubeCleaning" @bind-value="ClarificationSaccharimeter.TubeCleaning"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Cooler de Resfriamento Limpo" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterClearCollingCooler)" Id="clarificationSaccharimeterClearCollingCooler" @bind-value="ClarificationSaccharimeter.ClearCollingCooler"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações 10" Menu="@_options.GetMenu(MenuType.ClarificationSaccharimeterObservations10)" Id="clarificationSaccharimeterObservations10" @bind-value="ClarificationSaccharimeter.Observations10"/>
        </div>
    </div>
</VisitDataSeparator>

@code {

    [CascadingParameter]
    public EditVisitLayout Layout { get; set; } = new();
    [Parameter] public string? VisitId { get; set; }
    private Visit? _selectedVisit;
    private Menu[] _options = Array.Empty<Menu>();
    
    private ClarificationSaccharimeterViewModel ClarificationSaccharimeter { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _options = await MenuService.GetMenuOptions(PageType.ClarificationSaccharimeter);
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (VisitId is null) return;
        ClarificationSaccharimeter = (await Layout.SyncVisit(VisitId)).ClarificationSaccharimeter;
        SelectedPageEventNotifier.Notify(PageHelper.ClarificationSaccharimeterPageName);
    }

    public void Dispose()
    { 
        UpdateVisit();
    }
    
    public async ValueTask DisposeAsync()
    {
        await UpdateVisit();
    }

    private async Task UpdateVisit()
    {
        await Layout.UpdateVisitAsync();
    }
}