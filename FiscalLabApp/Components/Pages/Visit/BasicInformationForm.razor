@page "/visits/{VisitId}/Main"
@using FiscalLabApp.Extensions
@using Mapster
@implements IDisposable
@implements IAsyncDisposable

@layout EditVisitLayout
@inject IMenuService MenuService

<VisitDataSeparator Title="Dados Básicos">

    <div class="row">
        <div class="col">
            <div class="form-floating mb-3">
                <input class="form-control" id="createdAtDateInput" type="date" @bind-value="SelectedBasicInformation.VisitDate"/>
                <label for="createdAtDateInput">Data</label>
            </div >

        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input class="form-control" id="createdAtTimeInput" type="time" @bind-value="SelectedBasicInformation.VisitTime"/>
                <label for="createdAtTimeInput">Hora</label>
            </div >
        </div>
    </div>

    <div class="row">
        <div class="col">
            <PlantSelectInput PlantChanged="OnPlantChanged" CallbackRoute="@($"/visits/{VisitId}/Main")" CurrentPlant="SelectedBasicInformation.Plant"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <AssociationSelectInput AssociationChanged="OnAssociationChanged" CallbackRoute="@($"/visits/{VisitId}/Main")" CurrentAssociation="SelectedBasicInformation.Association"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Consultor" Menu="@_menus.GetMenu(MenuType.MainPageConsultant)" Id="consultantInput" @bind-value="SelectedBasicInformation.Consultant" Required="true"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Fiscal de Turno" Menu="@_menus.GetMenu(MenuType.MainPageInspector)" Id="inspectorInput" @bind-value="SelectedBasicInformation.Inspector"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Líder de Turno" Menu="@_menus.GetMenu(MenuType.MainPageLeader)" Id="leaderInput" @bind-value="SelectedBasicInformation.Leader"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Encarregado(a) Laboratório de Sacarose" Menu="@_menus.GetMenu(MenuType.MainPageLaboratoryLeader)" Id="laboratoryLeaderInput" @bind-value="SelectedBasicInformation.LaboratoryLeader"/>
        </div>
    </div>
</VisitDataSeparator>

@code {

    [CascadingParameter] EditVisitLayout Layout { get; set; } = new();

    [Parameter] public string VisitId { get; set; } = string.Empty;
    
    private BasicInformationViewModel SelectedBasicInformation { get; set; } = new();

    private Menu[] _menus = Array.Empty<Menu>();

    protected override async Task OnInitializedAsync()
    {
        _menus = await MenuService.GetMenuOptions(PageType.Main);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(VisitId))
        {
            await Layout.SetSelectedVisitId(VisitId);
            SelectedBasicInformation = Layout.GetSelectedVisit().BasicInformation.Adapt<BasicInformationViewModel>();
        }
    }

    private void OnPlantChanged(Plant plant)
    {
        SelectedBasicInformation.Plant = plant;
    }
    
    private void OnAssociationChanged(Association association)
    {
        SelectedBasicInformation.Association = association;
    }

    public void Dispose()
    { 
        UpdateVisit();
    }
    
    public async ValueTask DisposeAsync()
    {
        await UpdateVisit();
    }

    private async Task UpdateVisit()
    {
        Layout.GetSelectedVisit().BasicInformation = SelectedBasicInformation.Adapt<BasicInformation>();
        await Layout.UpdateVisitAsync();
    }

}