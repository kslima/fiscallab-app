@page "/visits/{visitId}/main"
@using FiscalLabApp.Extensions
@using FiscalLabApp.Helpers
@using FiscalLabApp.Services
@implements IDisposable
@implements IAsyncDisposable

@layout EditVisitLayout
@inject IMenuService MenuService
@inject SelectedPageEventNotifier SelectedPageEventNotifier

<VisitDataSeparator Title="Dados Básicos">

    <div class="row">
        <div class="col">
            <div class="form-floating mb-3">
                <input class="form-control" id="createdAtDateInput" type="date" @bind-value="BasicInformation.VisitDate" style="font-size: 12px;"/>
                <label for="createdAtDateInput" style="font-size: 14px;">Data</label>
            </div >

        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input class="form-control" id="createdAtTimeInput" type="time" @bind-value="BasicInformation.VisitTime" style="font-size: 12px;"/>
                <label for="createdAtTimeInput" style="font-size: 14px;">Hora</label>
            </div >
        </div>
    </div>

    <div class="row">
        <div class="col">
            <PlantSelectInput PlantChanged="OnPlantChanged" CallbackRoute="@($"/visits/{Layout.SelectedVisit?.Id}/main")" CurrentPlant="BasicInformation.Plant"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <AssociationSelectInput AssociationChanged="OnAssociationChanged" CallbackRoute="@($"/visits/{Layout.SelectedVisit?.Id}/main")" CurrentAssociation="BasicInformation.Association"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Consultor" Menu="@_menus.GetMenu(MenuType.MainPageConsultant)" Id="consultantInput" @bind-Value="BasicInformation.Consultant" Required="true" IsReadyOnly="@IsReadyOnly"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Fiscal de Turno" Menu="@_menus.GetMenu(MenuType.MainPageInspector)" Id="inspectorInput" @bind-value="BasicInformation.Inspector"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Líder de Turno" Menu="@_menus.GetMenu(MenuType.MainPageLeader)" Id="leaderInput" @bind-value="BasicInformation.Leader"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Encarregado(a) Laboratório de Sacarose" Menu="@_menus.GetMenu(MenuType.MainPageLaboratoryLeader)" Id="laboratoryLeaderInput" @bind-value="BasicInformation.LaboratoryLeader"/>
        </div>
    </div>
</VisitDataSeparator>

@code {

    [Parameter] public string? VisitId { get; set; }
    [Parameter] public bool IsReadyOnly { get; set; } = true;
    [CascadingParameter] public EditVisitLayout Layout { get; set; } = null!;
    
    private BasicInformationViewModel BasicInformation { get; set; } = new();

    private Menu[] _menus = [];

    protected override async Task OnInitializedAsync()
    {
        _menus = await MenuService.GetMenuOptions(PageType.Main);
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (VisitId is null) return;
        BasicInformation = (await Layout.SyncVisit(VisitId)).BasicInformation;
        SelectedPageEventNotifier.Notify(PageHelper.BasicInformationPageName);
    }

    private void OnPlantChanged(Plant plant)
    {
        BasicInformation.Plant = plant;
    }

    private void OnAssociationChanged(Association association)
    {
        BasicInformation.Association = association;
    }

    public void Dispose()
    {
        UpdateVisit();
    }

    public async ValueTask DisposeAsync()
    {
        await UpdateVisit();
    }

    private async Task UpdateVisit()
    {
        await Layout.UpdateVisitAsync();
    }

}