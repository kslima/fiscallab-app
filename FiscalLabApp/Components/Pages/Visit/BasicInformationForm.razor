@page "/visits/{visitId}/main"
@using FiscalLabApp.Extensions
@using Mapster
@implements IDisposable
@implements IAsyncDisposable

@layout EditVisitLayout
@inject IMenuService MenuService
@inject IVisitService VisitService;

<VisitDataSeparator Title="Dados Básicos">

    <div class="row">
        <div class="col">
            <div class="form-floating mb-3">
                <input class="form-control" id="createdAtDateInput" type="date" @bind-value="BasicInformation.VisitDate"/>
                <label for="createdAtDateInput">Data</label>
            </div >

        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input class="form-control" id="createdAtTimeInput" type="time" @bind-value="BasicInformation.VisitTime"/>
                <label for="createdAtTimeInput">Hora</label>
            </div >
        </div>
    </div>

    <div class="row">
        <div class="col">
            <PlantSelectInput PlantChanged="OnPlantChanged" CallbackRoute="@("/visits/main")" CurrentPlant="BasicInformation.Plant"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <AssociationSelectInput AssociationChanged="OnAssociationChanged" CallbackRoute="@("/visits/main")" CurrentAssociation="BasicInformation.Association"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Consultor" Menu="@_menus.GetMenu(MenuType.MainPageConsultant)" Id="consultantInput" @bind-Value="BasicInformation.Consultant" Required="true"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Fiscal de Turno" Menu="@_menus.GetMenu(MenuType.MainPageInspector)" Id="inspectorInput" @bind-value="BasicInformation.Inspector"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Líder de Turno" Menu="@_menus.GetMenu(MenuType.MainPageLeader)" Id="leaderInput" @bind-value="BasicInformation.Leader"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Encarregado(a) Laboratório de Sacarose" Menu="@_menus.GetMenu(MenuType.MainPageLaboratoryLeader)" Id="laboratoryLeaderInput" @bind-value="BasicInformation.LaboratoryLeader"/>
        </div>
    </div>
</VisitDataSeparator>

@code {
    
    [Parameter] public string? VisitId { get; set; }
    private Visit? _selectedVisit;
    private BasicInformationViewModel BasicInformation { get; set; } = new();

    private Menu[] _menus = Array.Empty<Menu>();

    protected override async Task OnInitializedAsync()
    {
        _menus = await MenuService.GetMenuOptions(PageType.Main);
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (VisitId is not null)
        {
            _selectedVisit = await VisitService.GetByIdAsync(VisitId);
            BasicInformation = _selectedVisit.BasicInformation.Adapt<BasicInformationViewModel>();
        }
    }
    
    private void OnPlantChanged(Plant plant)
    {
        BasicInformation.Plant = plant;
    }
    
    private void OnAssociationChanged(Association association)
    {
        BasicInformation.Association = association;
    }
    
    public void Dispose()
    { 
        UpdateVisit();
    }
    
    public async ValueTask DisposeAsync()
    {
        await UpdateVisit();
    }

    private async Task UpdateVisit()
    {
        if (_selectedVisit is null) return;

        _selectedVisit.BasicInformation = BasicInformation.Adapt<BasicInformation>();
        await VisitService.CreateAsync(_selectedVisit);
    }

}