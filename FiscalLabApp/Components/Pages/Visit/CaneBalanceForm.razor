@page "/visits/sugarcane-balance"
@implements IDisposable
@implements IAsyncDisposable

@using FiscalLabApp.Extensions
@using Mapster
@layout EditVisitLayout

@inject IMenuService MenuService

<VisitDataSeparator Title="Balanças">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Balança de Entrada" Menu="@_options.GetMenu(MenuType.CaneBalancePageInScale)" Id="inScale" @bind-value="SugarcaneBalance.InScale"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Balança de Saída" Menu="@_options.GetMenu(MenuType.CaneBalancePageOutScale)" Id="outScale" @bind-value="SugarcaneBalance.OutScale"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Sorteio de Cargas" Menu="@_options.GetMenu(MenuType.CaneBalancePageCargoDraw)" Id="cargoDraw" @bind-value="SugarcaneBalance.CargoDraw"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações(Teste de Balança)" Menu="@_options.GetMenu(MenuType.CaneBalancePageScaleObservations)" Id="scaleObservations" @bind-value="SugarcaneBalance.ScaleObservations"/>
        </div>
    </div>
</VisitDataSeparator>

<VisitDataSeparator Title="Calibragens">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="1ª calibração" Menu="@_options.GetMenu(MenuType.CaneBalancePageCalibration1)" Id="calibration1" @bind-value="SugarcaneBalance.Calibration1"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="2ª calibração" Menu="@_options.GetMenu(MenuType.CaneBalancePageCalibration2)" Id="calibration2" @bind-value="SugarcaneBalance.Calibration2"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Órgão Responsável" Menu="@_options.GetMenu(MenuType.CaneBalancePageResponsibleBody)" Id="responsibleBody" @bind-value="SugarcaneBalance.ResponsibleBody"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Certificado de Calibração" Menu="@_options.GetMenu(MenuType.CaneBalancePageCalibrationCertificate)" Id="calibrationCertificate" @bind-value="SugarcaneBalance.CalibrationCertificate"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações 1" Menu="@_options.GetMenu(MenuType.CaneBalancePageObservations1)" Id="observations1" @bind-value="SugarcaneBalance.Observations1"/>
        </div>
    </div>
</VisitDataSeparator>


<VisitDataSeparator Title="Porcentagens Analisadas">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Usina" Menu="@_options.GetMenu(MenuType.CaneBalancePagePlantPercentage)" Id="plant" @bind-value="SugarcaneBalance.PlantPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Fornecedor" Menu="@_options.GetMenu(MenuType.CaneBalancePageProviderPercentage)" Id="provider" @bind-value="SugarcaneBalance.ProviderPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Usina/Fazenda" Menu="@_options.GetMenu(MenuType.CaneBalancePagePlantFarmPercentage)" Id="percentPlantFarm" @bind-value="SugarcaneBalance.PlantFarmPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Porcentagem Fazenda/Fornecedor" Menu="@_options.GetMenu(MenuType.CaneBalancePageFarmProviderPercentage)" Id="percentFarmProvider" @bind-value="SugarcaneBalance.FarmProviderPercentage"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações 2" Menu="@_options.GetMenu(MenuType.CaneBalancePageObservations2)" Id="observations2" @bind-value="SugarcaneBalance.Observations2"/>
        </div>
    </div>
</VisitDataSeparator>

@code {

    [CascadingParameter] public EditVisitLayout Layout { get; set; } = new();
    
    public SugarcaneBalanceViewModel SugarcaneBalance { get; set; } = new();

    private Menu[] _options = Array.Empty<Menu>();

    protected override async Task OnInitializedAsync()
    {
        _options = await MenuService.GetMenuOptions(PageType.SugarcaneBalance);
        if (Layout.SelectedVisit is not null)
        {
            SugarcaneBalance = Layout.SelectedVisit.SugarcaneBalance.Adapt<SugarcaneBalanceViewModel>();
        }
    }
    
    public void Dispose()
    {
        UpdateVisit();
    }

    public async ValueTask DisposeAsync()
    {
        await UpdateVisit();
    }

    private async Task UpdateVisit()
    {
        if (Layout.SelectedVisit is null) return;
        
        Layout.SelectedVisit.SugarcaneBalance = SugarcaneBalance;
        await Layout.UpdateVisitAsync();
    }

}