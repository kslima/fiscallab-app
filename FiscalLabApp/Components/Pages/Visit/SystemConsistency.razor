@page "/visits/{VisitId}/system-consistency"
@implements IDisposable
@implements IAsyncDisposable
@using FiscalLabApp.Enums
@using FiscalLabApp.Extensions
@layout EditVisitLayout

@inject IMenuService MenuService
@inject IVisitService VisitService

<VisitDataSeparator Title="Amostra">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="O.C" Id="pressureGaugeCertificated" Menu="@_options.GetMenu(MenuType.SystemConsistencyOc)" @bind-value="SelectedVisit.SystemConsistencyOc"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Fazenda" Id="systemConsistencyFarm" Menu="@_options.GetMenu(MenuType.SystemConsistencyFarm)" @bind-value="SelectedVisit.SystemConsistencyFarm"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Propietário" Id="systemConsistencyOwner" Menu="@_options.GetMenu(MenuType.SystemConsistencyOwner)" @bind-value="SelectedVisit.SystemConsistencyOwner"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações" Id="systemConsistencyObservations" Menu="@_options.GetMenu(MenuType.SystemConsistencyObservations)" @bind-value="SelectedVisit.SystemConsistencyObservations"/>
        </div>
    </div>
</VisitDataSeparator>

<VisitDataSeparator Title="Dados Para Cálculo ATR">
    <div class="row">
        <div class="col">
            <InputSelect @bind-Value="SelectedVisit.SystemConsistencyClarifier" class="form-select form-select-lg mb-3" @oninput="OnClarifierSelected">
                @foreach (var clarify in Enum.GetValues(typeof(Clarify)))
                {
                    <option value="@clarify">@clarify</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Pbu" Id="benchmarkingEquipmentExpectedCrop" @bind-value="SelectedVisit.SystemConsistencyPlantPbu" ValueUpdated="CalculateAtr"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Brix" Id="benchmarkingEquipmentAccomplishedCrop" @bind-value="SelectedVisit.SystemConsistencyPlantBrix" ValueUpdated="CalculateAtr"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Leitura Sacarimétrica" Id="benchmarkingEquipmentPreviousCrop" @bind-value="SelectedVisit.SystemConsistencyPlantLs" ValueUpdated="CalculateAtr"/>
        </div>
    </div>
</VisitDataSeparator>

<VisitDataSeparator Title="Resultados Atr">
    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Usina" Id="cystemConsistencyPlantAtr" @bind-value="SelectedVisit.SystemConsistencyPlantAtr" Readonly="true" ValueUpdated="CalculateAtrDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Consecana" Id="systemConsistencyConsecanaAtr" @bind-value="SelectedVisit.SystemConsistencyConsecanaAtr" ValueUpdated="CalculateAtrDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Variação" Id="systemConsistencyDifferenceAtr" @bind-value="SelectedVisit.SystemConsistencyDifferenceAtr" Readonly="true"/>
        </div>
    </div>
</VisitDataSeparator>

<VisitDataSeparator Title="Resultados Pureza">
    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Usina" Id="cystemConsistencyPlantPurity" @bind-value="SelectedVisit.SystemConsistencyPlantPurity" Readonly="true" ValueUpdated="CalculatePurityDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Consecana" Id="systemConsistencyConsecanaPurity" @bind-value="SelectedVisit.SystemConsistencyConsecanaPurity" ValueUpdated="CalculatePurityDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Variação" Id="systemConsistencyDifferencePurity" @bind-value="SelectedVisit.SystemConsistencyDifferencePurity" Readonly="true"/>
        </div>
    </div>
</VisitDataSeparator>

<VisitDataSeparator Title="Resultados Pol">
    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Usina" Id="cystemConsistencyPlantPol" @bind-value="SelectedVisit.SystemConsistencyPlantPol" Readonly="true" ValueUpdated="CalculatePolDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Consecana" Id="systemConsistencyConsecanaPol" @bind-value="SelectedVisit.SystemConsistencyConsecanaPol" ValueUpdated="CalculatePolDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Variação" Id="systemConsistencyDifferencePol" @bind-value="SelectedVisit.SystemConsistencyDifferencePol" Readonly="true"/>
        </div>
    </div>
</VisitDataSeparator>

<VisitDataSeparator Title="Resultados Fibra">
    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Usina" Id="cystemConsistencyPlantFiber" @bind-value="SelectedVisit.SystemConsistencyPlantFiber" Readonly="true" ValueUpdated="CalculateFiberDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Consecana" Id="systemConsistencyConsecanaFiber" @bind-value="SelectedVisit.SystemConsistencyConsecanaFiber" ValueUpdated="CalculateFiberDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Variação" Id="systemConsistencyDifferenceFiber" @bind-value="SelectedVisit.SystemConsistencyDifferenceFiber" Readonly="true"/>
        </div>
    </div>
</VisitDataSeparator>

<VisitDataSeparator Title="Resultados Pcc">
    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Usina" Id="systemConsistencyPlantPcc" @bind-value="SelectedVisit.SystemConsistencyPlantPcc" Readonly="true" ValueUpdated="CalculatePccDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Consecana" Id="systemConsistencyConsecanaPcc" @bind-value="SelectedVisit.SystemConsistencyConsecanaPcc" ValueUpdated="CalculatePccDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Pcc()" Id="systemConsistencyDifferencePcc" @bind-value="SelectedVisit.SystemConsistencyDifferencePcc" Readonly="true"/>
        </div>
    </div>
</VisitDataSeparator>


<VisitDataSeparator Title="Resultados Ar">
    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Usina" Id="cystemConsistencyPlantAr" @bind-value="SelectedVisit.SystemConsistencyPlantAr" Readonly="true" ValueUpdated="CalculateArDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Consecana" Id="systemConsistencyConsecanaAr" @bind-value="SelectedVisit.SystemConsistencyConsecanaAr" ValueUpdated="CalculateArDifference"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitNumberInput Title="Variação" Id="systemConsistencyDifferenceAr" @bind-value="SelectedVisit.SystemConsistencyDifferenceAr" Readonly="true"/>
        </div>
    </div>
</VisitDataSeparator>

@code {

    [CascadingParameter]
    public EditVisitLayout Layout { get; set; } = new();
    
    [Parameter] 
    public string VisitId { get; set; } = string.Empty;

    private Menu[] _options = Array.Empty<Menu>();

    public Visit SelectedVisit { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _options = await MenuService.GetMenuOptions(PageType.SystemConsistency);
    }
    
    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(VisitId))
        {
            SelectedVisit = await VisitService.GetByIdAsync(VisitId);
            Layout.SelectedVisitId = VisitId;
        }
    }
    
    private void CalculateAtr()
    {
        if (SelectedVisit.SystemConsistencyClarifier is null ||
            SelectedVisit.SystemConsistencyPlantPbu == 0 ||
            SelectedVisit.SystemConsistencyPlantBrix == 0 ||
            SelectedVisit.SystemConsistencyPlantLs == 0) return;
            
        var sugarcaneAnalysis = new SugarcaneAnalysis(
            SelectedVisit.SystemConsistencyClarifier.Value,
            SelectedVisit.SystemConsistencyPlantPbu,
            SelectedVisit.SystemConsistencyPlantBrix,
            SelectedVisit.SystemConsistencyPlantLs);
        
        SelectedVisit.SystemConsistencyPlantAtr = sugarcaneAnalysis.Atr.RoundToEven(3);
        SelectedVisit.SystemConsistencyPlantPurity = sugarcaneAnalysis.Purity.RoundToEven(3);
        SelectedVisit.SystemConsistencyPlantPol = sugarcaneAnalysis.Pol.RoundToEven(3);
        SelectedVisit.SystemConsistencyPlantFiber = sugarcaneAnalysis.Fiber.RoundToEven(3);
        SelectedVisit.SystemConsistencyPlantPcc = sugarcaneAnalysis.Pcc.RoundToEven(3);
        SelectedVisit.SystemConsistencyPlantAr = sugarcaneAnalysis.Ar.RoundToEven(3);
    }

    public void Dispose()
    {
        VisitService.UpdateAsync(SelectedVisit);
    }
    
    public async ValueTask DisposeAsync()
    {
        await VisitService.UpdateAsync(SelectedVisit);
    }

    private void OnClarifierSelected(ChangeEventArgs e)
    {
        if (e.Value is null) return;
        
        if (!Enum.TryParse<Clarify>(e.Value.ToString(), out var clarify)) return;
        SelectedVisit.SystemConsistencyClarifier = clarify;
        CalculateAtr();
        CalculateAtrDifference();
        CalculatePurityDifference();
        CalculatePolDifference();
        CalculateFiberDifference();
        CalculatePccDifference();
        CalculateArDifference();
    }

    private void CalculateAtrDifference()
    {
        SelectedVisit.SystemConsistencyDifferenceAtr = SelectedVisit.SystemConsistencyPlantAtr - SelectedVisit.SystemConsistencyConsecanaAtr;
    }
    
    private void CalculatePurityDifference()
    {
        SelectedVisit.SystemConsistencyDifferencePurity = SelectedVisit.SystemConsistencyPlantPurity - SelectedVisit.SystemConsistencyConsecanaPurity;
    }
    
    private void CalculatePolDifference()
    {
        SelectedVisit.SystemConsistencyDifferencePol = SelectedVisit.SystemConsistencyPlantPol - SelectedVisit.SystemConsistencyConsecanaPol;
    }
    
    private void CalculateFiberDifference()
    {
        SelectedVisit.SystemConsistencyDifferenceFiber = SelectedVisit.SystemConsistencyPlantFiber - SelectedVisit.SystemConsistencyConsecanaFiber;
    }
    
    private void CalculatePccDifference()
    {
        SelectedVisit.SystemConsistencyDifferencePcc = SelectedVisit.SystemConsistencyPlantPcc - SelectedVisit.SystemConsistencyConsecanaPcc;
    }
    
    private void CalculateArDifference()
    {
        SelectedVisit.SystemConsistencyDifferenceAr = SelectedVisit.SystemConsistencyPlantAr - SelectedVisit.SystemConsistencyConsecanaAr;
    }

}