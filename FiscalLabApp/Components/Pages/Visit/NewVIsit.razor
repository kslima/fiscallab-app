@page "/new-visit"

@inject IVisitService VisitService
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col">
        <PlantSelectInput PlantChanged="OnPlantChanged" CallbackRoute="/new-visit"/>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="form-floating mb-3">
            <input class="form-control" id="createdAtDateInput" type="date" @bind-value="_date"/>
        </div >

    </div>
    <div class="col">
        <div class="form-floating mb-3">
            <input class="form-control" id="createdAtTimeInput" type="time" @bind-value="_time"/>
            <label for="createdAtTimeInput">Hora</label>
        </div >
    </div>
</div>

<div class="d-flex justify-content-end">
    <button type="submit" class="btn btn-outline-secondary mb-3" @onclick="OnCancel">Cancelar</button>
    <button type="submit" class="btn btn-outline-success mb-3 ms-3" @onclick="CreateNewVisit">Salvar</button>
</div>

@code {
    
    private DateOnly _date = DateOnly.FromDateTime(DateTime.Now);
    private TimeOnly _time = TimeOnly.FromDateTime(DateTime.Now);
    private PlantModel? SelectedPlant { get; set; }
    
    private async Task CreateNewVisit()
    {
        var visit = new Visit
        {
            Plant = SelectedPlant!,
            VisitDate = _date,
            VisitTime = _time,
            CreatedAt = DateTime.UtcNow
        };
        
        visit = await VisitService.CreateAsync(visit);
        NavigationManager.NavigateTo("/visits");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/visits");
    }
    
    private Task OnPlantChanged(PlantModel plant)
    {
        SelectedPlant = plant;
        return Task.CompletedTask;
    }

}