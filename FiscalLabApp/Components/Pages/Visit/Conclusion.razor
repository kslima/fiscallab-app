@page "/conclusion"
@implements IDisposable
@using FiscalLabApp.Extensions

@layout EditVisitLayout
@inject IMenuService MenuService
@inject IVisitService VisitService

<VisitDataSeparator Title="Conclusao">
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Atuação do fiscal" Menu="@_options.GetMenu(MenuType.ConclusionInspectorPerformance)" Id="conclusionInspectorPerformance" @bind-value="Visit.ConclusionInspectorPerformance"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Receptividade Laboratório" Menu="@_options.GetMenu(MenuType.ConclusionLaboratoryReceptivity)" Id="conclusionLaboratoryReceptivity" @bind-value="Visit.ConclusionLaboratoryReceptivity"/>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <VisitTextInput Title="Pendências" Menu="@_options.GetMenu(MenuType.ConclusionPendencies)" Id="conclusionPendencies" @bind-Value="Visit.ConclusionPendencies"/>
        </div>
    </div>
    
    <div class="row">
        <div class="col">
            <VisitTextInput Title="Observações sobre a visita" Menu="@_options.GetMenu(MenuType.ConclusionObservations)" Id="conclusionObservations" @bind-Value="Visit.ConclusionObservations"/>
        </div>
    </div>
</VisitDataSeparator>


@code {

    [CascadingParameter]
    public EditVisitLayout Layout { get; set; } = new();

    [Parameter]
    public string VisitId { get; set; } = string.Empty;

    public Visit Visit { get; set; } = new();

    private Menu[] _options = Array.Empty<Menu>();

    protected override async Task OnInitializedAsync()
    {
        _options = await MenuService.GetMenuOptions(PageType.Main);
        Visit = Layout.SelectedVisit;
    }

    public void Dispose()
    {
        Layout.SaveChanges();
    }

}